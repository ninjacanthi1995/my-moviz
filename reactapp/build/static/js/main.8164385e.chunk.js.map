{"version":3,"sources":["components/Movie.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","props","useState","watchMovie","setWatchMovie","countWatchMovie","setCountWatchMovie","myRatingMovie","setMyRatingMovie","globalRating","setGlobalRating","globalCountRating","countVote","setCountVote","isRated","setIsRated","handleStarClick","index","monAvisStars","Array","fill","map","elem","onClick","icon","faStar","i","style","color","globalAvisStars","Math","round","Col","xs","lg","xl","className","Card","CardImg","top","width","src","movieImg","alt","CardBody","CardText","isLiked","handleClickDeleteMovieParent","movieName","handleClickAddMovieParent","faHeart","cursor","faVideo","Badge","backgroundColor","Button","movieDesc","App","moviesCount","setMoviesCount","popoverOpen","setPopoverOpen","moviesWishList","setMoviesWishList","handleClickAddMovie","handleClickDeleteMovie","filter","movie","movies","name","desc","img","note","vote","includes","Container","Row","Nav","NavItem","id","type","Popover","placement","isOpen","target","toggle","PopoverHeader","PopoverBody","ListGroup","ListGroupItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8164385e.chunk.js","sourcesContent":["import { Col } from \"reactstrap\";\r\nimport { Card, CardImg, CardText, CardBody, Button, Badge } from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faVideo } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nexport function Movie(props) {\r\n  const [watchMovie, setWatchMovie] = useState(false);\r\n  const [countWatchMovie, setCountWatchMovie] = useState(0);\r\n  const [myRatingMovie, setMyRatingMovie] = useState(0);\r\n  const [globalRating, setGlobalRating] = useState(props.globalRating);\r\n  const [countVote, setCountVote] = useState(props.globalCountRating);\r\n  const [isRated, setIsRated] = useState(false);\r\n\r\n  const handleLikeClick = () => {\r\n    !props.isLiked\r\n      ? props.handleClickAddMovieParent(props.movieName, props.movieImg)\r\n      : props.handleClickDeleteMovieParent(props.movieName);\r\n  };\r\n\r\n  const handleWatchClick = () => {\r\n    setWatchMovie(true);\r\n    setCountWatchMovie(countWatchMovie + 1);\r\n  };\r\n\r\n  const handlePlus1Click = () => {\r\n    if (myRatingMovie !== 10) {\r\n      setMyRatingMovie(myRatingMovie + 1);\r\n      if (!isRated) {\r\n        setGlobalRating((globalRating * countVote + 1) / (countVote + 1));\r\n        setCountVote(countVote + 1);\r\n      } else {\r\n        setGlobalRating((globalRating * countVote + 1) / countVote);\r\n      }\r\n      setIsRated(true);\r\n    }\r\n  };\r\n\r\n  const handleMinus1Click = () => {\r\n    if (myRatingMovie !== 0) {\r\n      setMyRatingMovie(myRatingMovie - 1);\r\n      if (!isRated) {\r\n        setGlobalRating((globalRating * countVote - 1) / (countVote + 1));\r\n        setCountVote(countVote + 1);\r\n      } else {\r\n        setGlobalRating((globalRating * countVote - 1) / countVote);\r\n      }\r\n      setIsRated(true);\r\n    }\r\n  };\r\n\r\n  const handleStarClick = (index) => {\r\n    if (!isRated) {\r\n      setGlobalRating(\r\n        (globalRating * countVote - myRatingMovie + index) / (countVote + 1)\r\n      );\r\n      setCountVote(countVote + 1);\r\n    } else {\r\n      setGlobalRating(\r\n        (globalRating * countVote - myRatingMovie + index) / countVote\r\n      );\r\n    }\r\n    setIsRated(true);\r\n    setMyRatingMovie(index);\r\n  };\r\n\r\n  let monAvisStars = Array(10)\r\n    .fill(0)\r\n    .map((elem, index) => (\r\n      <FontAwesomeIcon\r\n        onClick={() => handleStarClick(index + 1)}\r\n        icon={faStar}\r\n      />\r\n    ));\r\n  for (let i = 0; i < myRatingMovie; i++) {\r\n    monAvisStars[i] = (\r\n      <FontAwesomeIcon\r\n        onClick={() => handleStarClick(i + 1)}\r\n        style={{ color: \"#f1c40f\" }}\r\n        icon={faStar}\r\n      />\r\n    );\r\n  }\r\n\r\n  let globalAvisStars = Array(10)\r\n    .fill(\r\n      <FontAwesomeIcon style={{ color: \"#f1c40f\" }} icon={faStar} />,\r\n      0,\r\n      Math.round(globalRating) - 1\r\n    )\r\n    .fill(<FontAwesomeIcon icon={faStar} />, Math.round(globalRating));\r\n\r\n  return (\r\n    <Col xs=\"12\" lg=\"6\" xl=\"4\" className=\"mb-4\">\r\n      <Card>\r\n        <CardImg top width=\"100%\" src={props.movieImg} alt=\"Card image cap\" />\r\n        <CardBody>\r\n          <CardText>\r\n            Like{\" \"}\r\n            <FontAwesomeIcon\r\n              onClick={handleLikeClick}\r\n              icon={faHeart}\r\n              style={{\r\n                cursor: \"pointer\",\r\n                color: props.isLiked ? \"#e74c3c\" : \"\",\r\n              }}\r\n            />\r\n          </CardText>\r\n          <CardText>\r\n            Nombre de vues{\" \"}\r\n            <FontAwesomeIcon\r\n              onClick={handleWatchClick}\r\n              icon={faVideo}\r\n              style={{ cursor: \"pointer\", color: watchMovie ? \"#e74c3c\" : \"\" }}\r\n            />{\" \"}\r\n            <Badge color=\"primary\" style={{ backgroundColor: \"gray\" }}>\r\n              {countWatchMovie}\r\n            </Badge>\r\n          </CardText>\r\n          <CardText>\r\n            Mon avis {monAvisStars}\r\n            <Button onClick={handleMinus1Click}>-1</Button>\r\n            <Button onClick={handlePlus1Click}>+1</Button>\r\n          </CardText>\r\n          <CardText>\r\n            Avis Global {globalAvisStars} ({countVote})\r\n          </CardText>\r\n          <CardText>{props.movieName}</CardText>\r\n          <CardText>{props.movieDesc}</CardText>\r\n        </CardBody>\r\n      </Card>\r\n    </Col>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport { Movie } from \"./components/Movie\";\n\nimport {\n  Container,\n  Row,\n  Col,\n  Nav,\n  NavItem,\n  Button,\n  Popover,\n  PopoverHeader,\n  PopoverBody,\n  ListGroup,\n  ListGroupItem,\n} from \"reactstrap\";\n\nimport { useState } from \"react\";\n\nfunction App() {\n  const [moviesCount, setMoviesCount] = useState(0);\n  const [popoverOpen, setPopoverOpen] = useState(false);\n  const [moviesWishList, setMoviesWishList] = useState([]);\n\n  const moviesInfos = [\n    {\n      name: \"Star Wars : L'ascension de Skywalker\",\n      desc: \"La conclusion de la saga Skywalker. De nouvelles légendes vont naître dans cette ...\",\n      img: \"starwars.jpg\",\n      note: 6.7,\n      vote: 5,\n    },\n    {\n      name: \"Maléfique : Le pouvoir du mal\",\n      desc: \"Plusieurs années après avoir découvert pourquoi la plus célèbre méchante Disney avait un cœur ...\",\n      img: \"maleficent.jpg\",\n      note: 8.2,\n      vote: 3,\n    },\n    {\n      name: \"Jumanji: The Next Level\",\n      desc: \"L’équipe est de retour, mais le jeu a changé. Alors qu’ils retournent dans Jumanji pour secourir ...\",\n      img: \"jumanji.jpg\",\n      note: 4,\n      vote: 5,\n    },\n    {\n      name: \"Once Upon a Time... in Hollywood\",\n      desc: \"En 1969, Rick Dalton – star déclinante d'une série télévisée de western – et Cliff Booth ...\",\n      img: \"once_upon.jpg\",\n      note: 6,\n      vote: 7,\n    },\n    {\n      name: \"La Reine des neiges 2\",\n      desc: \"Elsa, Anna, Kristoff, Olaf et Sven voyagent bien au-delà des portes d’Arendelle à la recherche de réponses ...\",\n      img: \"frozen.jpg\",\n      note: 4.6,\n      vote: 3,\n    },\n    {\n      name: \"Terminator: Dark Fate\",\n      desc: \"De nos jours à Mexico. Dani Ramos, 21 ans, travaille sur une chaîne de montage dans une usine automobile...\",\n      img: \"terminator.jpg\",\n      note: 6.1,\n      vote: 1,\n    },\n  ];\n\n  const handleClickAddMovie = (movieName, movieImg) => {\n    setMoviesCount(moviesCount + 1);\n    setMoviesWishList([...moviesWishList, { movieName, movieImg }]);\n  };\n\n  const handleClickDeleteMovie = (movieName) => {\n    setMoviesCount(moviesCount - 1);\n    setMoviesWishList(moviesWishList.filter((movie) => movie.movieName !== movieName));\n  };\n\n  const toggle = () => setPopoverOpen(!popoverOpen);\n\n  const movies = moviesInfos.map((movie) => {\n    return (\n      <Movie\n        movieName={movie.name}\n        movieDesc={movie.desc}\n        movieImg={movie.img}\n        globalRating={movie.note}\n        globalCountRating={movie.vote}\n        handleClickAddMovieParent={handleClickAddMovie}\n        handleClickDeleteMovieParent={handleClickDeleteMovie}\n        isLiked={moviesWishList.map(movie => movie.movieName).includes(movie.name)}\n      />\n    );\n  });\n\n  return (\n    <Container className=\"d-flex flex-column\">\n      <Row className=\"mt-3 mb-3\">\n        <Col>\n          <Nav className=\"text-white gap-3\">\n            <NavItem>\n              <img src=\"logo.png\" alt=\"\" />\n            </NavItem>\n            <NavItem>Last Releases</NavItem>\n            <NavItem>\n              <Button id=\"Popover1\" type=\"button\">\n                {moviesCount} films\n              </Button>\n              <Popover\n                placement=\"bottom\"\n                isOpen={popoverOpen}\n                target=\"Popover1\"\n                toggle={toggle}\n              >\n                <PopoverHeader>Wish List</PopoverHeader>\n                <PopoverBody>\n                  <ListGroup>\n                    {moviesWishList.map((movie) => (\n                      <ListGroupItem style={{cursor: 'pointer'}} onClick={() => handleClickDeleteMovie(movie.movieName)}>\n                        <img src={movie.movieImg} className=\"w-25\" alt=\"\"/>\n                        {movie.movieName}\n                      </ListGroupItem>\n                    ))}\n                  </ListGroup>\n                </PopoverBody>\n              </Popover>\n            </NavItem>\n          </Nav>\n        </Col>\n      </Row>\n\n      <Row>{movies}</Row>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}